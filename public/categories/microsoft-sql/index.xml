<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microsoft SQL on Chris Titus Tech</title>
    <link>/categories/microsoft-sql/</link>
    <description>Recent content in Microsoft SQL on Chris Titus Tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Aug 2017 17:00:08 +0000</lastBuildDate>
    
	<atom:link href="/categories/microsoft-sql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Taking Databases Offline and/or Dropping through SQL Query</title>
      <link>/taking-databases-offline-sql-query/</link>
      <pubDate>Thu, 31 Aug 2017 17:00:08 +0000</pubDate>
      
      <guid>/taking-databases-offline-sql-query/</guid>
      <description>The following SQL query is for taking databases offline, drop the offline databases, or bring them all back online. This affects every database in your SQL instance, so be very careful when using these. The following three queries will save you a considerable amount of time if repurposing an instance.
Taking databases offline and then dropping them use master;&amp;lt;br /&amp;gt; declare @nsql nvarchar(max);&amp;lt;br /&amp;gt; select @nsql=coalesce(@nsql+CHAR(13)+CHAR(10),&#39;&#39;)+&amp;lt;br /&amp;gt; &#39;ALTER DATABASE [&#39;+name+&#39;] SET OFFLINE WITH NO_WAIT;&#39;&amp;lt;br /&amp;gt; from master.</description>
    </item>
    
    <item>
      <title>GFI Archiver resource usage</title>
      <link>/gfi-archiver-resource-usage/</link>
      <pubDate>Fri, 06 Mar 2015 23:56:01 +0000</pubDate>
      
      <guid>/gfi-archiver-resource-usage/</guid>
      <description>Does your GFI Archiver resource usage SQL process ballon over 8GB? If so, the following procedure will reduce usage by about half and fix many performance issues.
  Stop all MailArchiver and SQL services
  Create a backup of ..MailArchiverStoreDataproduct.config
  Edit product.config and add the following key within the &amp;lt;AppSettings&amp;gt; section: &amp;lt;add key=&amp;quot;MaxPoolSize&amp;quot; value=&amp;quot;20&amp;quot; /&amp;gt;
  Re-start the services
  *Note GFI has built-in scripts made to stop all NON-SQL services.</description>
    </item>
    
    <item>
      <title>Configuring SQL Authentication</title>
      <link>/configuring-sql-authentication/</link>
      <pubDate>Tue, 09 Apr 2013 16:24:26 +0000</pubDate>
      
      <guid>/configuring-sql-authentication/</guid>
      <description>Configuring SQL Authentication can be tricky at times, and this is a great article that goes over the two types of authentication in SQL. I find some programs interface better with direct SQL authentication when Windows Authentication fails for any reason.
Note: This article is taken from http://kb.gfi.com/articles/SkyNet_Article/How-to-configure-SQL-Server-2005-2008-to-accept-SQL-Authentication and all credit goes to them for the writing. I’m posting it here simply as a reference in case there _site changes the above link.</description>
    </item>
    
    <item>
      <title>Archiving and Reducing Exchange Mailboxes and Stores (Part 2)</title>
      <link>/archiving-and-reducing-exchange-mailboxes-and-stores-part-2/</link>
      <pubDate>Wed, 29 Jun 2011 21:37:07 +0000</pubDate>
      
      <guid>/archiving-and-reducing-exchange-mailboxes-and-stores-part-2/</guid>
      <description>You have analyzed your current exchange store and deciding to buy a 3rdparty solution so your users can maintain the large amount of emails they are accustomed to and retain all emails for legal/business purposes, and here are the options.
 Buy the Barracuda Message Archiver ( website link: http://www.barracudanetworks.com/ns/products/archiver-overview.php) which is a really simple installation and maintenance. I have used this before, and it gets the job done. I did have issues with restoring emails after being exported, but after some conversion and importing to pst files it worked.</description>
    </item>
    
    <item>
      <title>Grow Database File in SQL</title>
      <link>/grow-database-file-in-sql/</link>
      <pubDate>Wed, 03 Nov 2010 15:23:12 +0000</pubDate>
      
      <guid>/grow-database-file-in-sql/</guid>
      <description>I use both SQL Express 2005 on a server and SQL 2008 on another server. The following script is nice to manually grow a file. By default, SQL auto-grows database files by 10% when it runs low on space. In most cases this is fine, but I’m a perfectionist and hate receiving errors about low DB Space in my SCE (System Center Essentials) console.
 use OperationsManager
  declare @dbname nvarchar(300)</description>
    </item>
    
  </channel>
</rss>